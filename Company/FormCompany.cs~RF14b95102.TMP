using System;
using System.Data;
using System.Data.SqlClient;
using System.Windows.Forms;

namespace Company
{
    public partial class FormCompany : Form
    {
        private int? companyId;

        public FormCompany(int? companyId = null)
        {
            InitializeComponent();
            this.companyId = companyId;

            if (companyId != null)
            {
                LoadCompanyDetails();
                btnSave.Visible = true;
                btnCancel.Visible = true;
            }
            else
            {
                btnSave.Visible = true;
            }
        }

        private void LoadCompanyDetails()
        {
            string query = "SELECT * FROM Company WHERE CompanyID = @CompanyID";
            SqlParameter[] parameters = { new SqlParameter("@CompanyID", companyId) };
            DataTable company = DatabaseHelper.ExecuteQuery(query, parameters);
            if (company.Rows.Count > 0)
            {
                txtCompanyName.Text = company.Rows[0]["CompanyName"].ToString();
                txtAddressLine1.Text = company.Rows[0]["AddressLine1"].ToString();
                txtAddressLine2.Text = company.Rows[0]["AddressLine2"].ToString();
                txtZipCode.Text = company.Rows[0]["ZipCode"].ToString();
                txtTelephone.Text = company.Rows[0]["Telephone"].ToString();
            }
        }

        public void LoadCompanyData(int companyId)
        {
            string query = $"SELECT CompanyID, CompanyName, AddressLine1, AddressLine2, ZipCode, Telephone FROM Company WHERE CompanyID = {companyId} AND IsActive = 1";
            DataTable dt = DatabaseHelper.ExecuteQuery(query);

            if (dt.Rows.Count > 0)
            {
                DataRow row = dt.Rows[0];
                txtCompanyName.Text = row["CompanyName"].ToString();
                txtAddressLine1.Text = row["AddressLine1"].ToString();
                txtAddressLine2.Text = row["AddressLine2"].ToString();
                txtZipCode.Text = row["ZipCode"].ToString();
                txtTelephone.Text = row["Telephone"].ToString();
            }
        }

        private void btnSave_Click(object sender, EventArgs e)
        {
            string query;
            SqlParameter[] parameters = {
                new SqlParameter("@CompanyName", txtCompanyName.Text),
                new SqlParameter("@AddressLine1", txtAddressLine1.Text),
                new SqlParameter("@AddressLine2", txtAddressLine2.Text),
                new SqlParameter("@ZipCode", txtZipCode.Text),
                new SqlParameter("@Telephone", txtTelephone.Text)
            };

            if (companyId == null)
            {
                query = "INSERT INTO Company (CompanyName, AddressLine1, AddressLine2, ZipCode, Telephone, CreatedBy) VALUES (@CompanyName, @AddressLine1, @AddressLine2, @ZipCode, @Telephone, 'Jag')";
            }
            else
            {
                query = "UPDATE Company SET CompanyName = @CompanyName, AddressLine1 = @AddressLine1, AddressLine2 = @AddressLine2, ZipCode = @ZipCode, Telephone = @Telephone, ModifiedOn = GETDATE(), ModifiedBy = 'Jag' WHERE CompanyID = @CompanyID";
                Array.Resize(ref parameters, parameters.Length + 1);
                parameters[parameters.Length - 1] = new SqlParameter("@CompanyID", companyId);
            }

            DatabaseHelper.ExecuteNonQuery(query, parameters);
            MessageBox.Show("Company saved successfully!");
            this.Close();
        }

        private void btnCancel_Click(object sender, EventArgs e)
        {
            this.Close();
        }

        public void btnEdit_Click(object sender, EventArgs e)
        {
            btnSave.Visible = true;

            txtCompanyName.Enabled = true;
            txtAddressLine1.Enabled = true;
            txtAddressLine2.Enabled = true;
            txtZipCode.Enabled = true;
            txtTelephone.Enabled = true;
        }

        private void btnDelete_Click(object sender, EventArgs e)
        {
            if (companyId != null)
            {
                var confirmResult = MessageBox.Show("Are you sure you want to delete this company?", "Confirm Delete", MessageBoxButtons.YesNo);
                if (confirmResult == DialogResult.Yes)
                {
                    string query = "DELETE FROM Company WHERE CompanyID = @CompanyID";
                    SqlParameter[] parameters = { new SqlParameter("@CompanyID", companyId) };

                    int rowsAffected = DatabaseHelper.ExecuteNonQuery(query, parameters);
                    if (rowsAffected > 0)
                    {
                        MessageBox.Show("Company deleted successfully.");
                        this.Close();
                    }
                    else
                    {
                        MessageBox.Show("Error deleting the company.");
                    }
                }
            }
            else
            {
                MessageBox.Show("No company selected for deletion.");
            }
        }
    }
}
